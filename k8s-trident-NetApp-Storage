# Trident NetApp storage installation and configuration for OpenShift and K8S cluster

https://cloud.redhat.com/blog/trident-openshift-a-netapp-red-hat-solution-to-dynamically-provision-storage-for-openshift

https://gist.github.com/Bill-tran/5e2ab062a9028bf693c934146249e68c (OpenSSl Issues)

https://github.com/NetApp/trident/releases

# Steps:
1) Download trident binary 
https://github.com/NetApp/trident/releases

2) Install trident cli
$ cp /path-to-file/tridentctl /usr/local/sbin
$ cp /path-to-file/tridentctl /usr/local/bin

3) Create namespace
$ kubectl ns create trident-ns

4) Install tridnet controller
$ tridentctl install -n trident-ns
$ kubectl get pods -n trident-ns -o wide

5) Configure backend storage
$ vi backend.j2
# cat backend.json
{
"debug":true,
"managementLIF":"10.11.12.13",
"dataLIF":"10.11.12.14",
"svm":"test",
"backendName": "nas_backend",
"aggregate":"aggr_01",
"username":"admin",
"password":"",
"storageDriverName":"ontap-nas",
"storagePrefix":"bala_",
"version":1
}
$ tridentctl create backend -f backend.j2 -n trident-ns

6) Create StorageClass
$ vi sc.yaml
# cat sc.yaml
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
name: nas
provisioner: csi.trident.netapp.io
parameters:
backendType: "ontap-nas"
snapshots: "True"
provisioningType: "thin"
encryption: "true"
$ kubectl apply -f sc.yaml

7) Create pvc
8) Create po
9) Add pvc to po

==============================


Trident Installation and Configure using Helm and Kubectl
https://docs.netapp.com/us-en/trident/trident-get-started/kubernetes-deploy-helm.html

# Add helm repo and install helm
$ helm repo add netapp-trident https://netapp.github.io/trident-helm-chart
$ helm install <name> netapp-trident/trident-operator --version 23.04.0 --create-namespace --namespace <trident-namespace>

# Configure helm backend 
1) Create a netapp secret with username and password
2) Confugure trident backend

$ kubectl -n trident create -f backend-tbc-ontap-san-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: backend-tbc-ontap-san-secret
type: Opaque
stringData:
  username: cluster-admin
  password: t@Ax@7q(>

$ kubectl -n trident create -f backend-tbc-ontap-san.yaml
apiVersion: trident.netapp.io/v1
kind: TridentBackendConfig
metadata:
  name: backend-tbc-ontap-san
spec:
  version: 1
  backendName: ontap-san-backend
  storageDriverName: ontap-san
  managementLIF: 10.0.0.1
  dataLIF: 10.0.0.2
  svm: trident_svm
  credentials:
    name: backend-tbc-ontap-san-secret

$ kubectl -n trident get tbc backend-tbc-ontap-san
NAME                    BACKEND NAME          BACKEND UUID                           PHASE   STATUS
backend-tbc-ontap-san   ontap-san-backend     8d24fce7-6f60-4d4a-8ef6-bab2699e6ab8   Bound   Success

$ kubectl -n trident get tbc backend-tbc-ontap-san -o wide
NAME                    BACKEND NAME        BACKEND UUID                           PHASE   STATUS    STORAGE DRIVER   DELETION POLICY
backend-tbc-ontap-san   ontap-san-backend   8d24fce7-6f60-4d4a-8ef6-bab2699e6ab8   Bound   Success   ontap-san        delete








