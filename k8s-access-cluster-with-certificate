#### Pre-Requisite:
#install kubectl 
#login to k8s cluster using kubeconfig file

#### Step 1: Create a new private key  and CSR

mkdir /root/certificates
cd /root/certificates

$openssl genrsa -out user-01.key 2048
$openssl req -new -key user-01.key -out user-01.csr -subj "/CN=user-01/O=w2c"

#### Step 2: Decode the csr

$cat user-01.csr | base64 | tr -d '\n'


#### Step 3: Generate the Kubernetes Signing Request

$vi csr-requests.yaml

apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  name: user-01-csr
spec:
  groups:
  - system:authenticated
  request: <ADD-YOUR-CSR-HERE>
  signerName: kubernetes.io/kube-apiserver-client
  usages:
  - digital signature
  - key encipherment
  - client auth

#### Step 4: Apply the Signing Requests:

$kubectl apply -f csr-requests.yaml

#You can optionally verify with  kubectl get csr

#### Step 5: Approve the csr

$kubectl certificate approve zeal-csr

#### Step 6: Download the Certificate from csr

$kubectl get csr user-01-csr -o jsonpath='{.status.certificate}' | base64 -d > user-01.crt

#### Step 7: Create a new context

$kubectl config set-credentials user-01 --client-certificate=user-01.crt --client-key=user-01.key

#### Step 8: Set new Context

$kubectl config set-context user-01-context --cluster [YOUR-CLUSTER-HERE] --user=user-01

#### Step 9: Use Context to Verify

$kubectl --context=zeal-context get pods


#### Step 10: Create RBAC Role Allowing List PODS Operation

##provide the cluster role to above user
